
import { actions, getState } from '../../state/store.js';
function el(id){ return document.getElementById(id); }
export function open(chainId){
  const st=getState(); const c=st.chains.find(x=>x.id===chainId); if(!c) return;
  el('ed-chain-label').value=c.label||''; el('ed-led-count').value=String(c.ledCount||0); el('ed-led-lm').value=String(c.lmPerLed||0);
  const recompute=()=>{ const t=(parseInt(el('ed-led-count').value||'0')||0)*(parseFloat(el('ed-led-lm').value||'0')||0); el('ed-led-total').value=String(t); };
  el('ed-led-count').oninput=recompute; el('ed-led-lm').oninput=recompute; recompute(); el('ls-modal').classList.add('show'); el('ls-modal').style.zIndex=10000;
}
export function close(){ el('ls-modal')?.classList.remove('show'); }
export function bind(){
  el('btn-ls-close')?.addEventListener('click', close);
  el('btn-ls-ok')?.addEventListener('click', ()=>{
    const st=getState(); const ls=st.nodes.find(n=>n.kind==='LightSource'); const c= st.chains.find(x=>x.id===ls?.chainId); if(!c) return close();
    actions.updateChain(c.id,{ label:el('ed-chain-label').value, ledCount:parseInt(el('ed-led-count').value||'0')||0, lmPerLed:parseFloat(el('ed-led-lm').value||'0')||0 }); close();
  });
  const hdr=el('ls-drag'); hdr?.addEventListener('mousedown',(e)=>{
    const m=el('ls-modal'); let drag={sx:e.clientX, sy:e.clientY, left:m.offsetLeft, top:m.offsetTop};
    function mv(ev){ m.style.left=(drag.left+(ev.clientX-drag.sx))+'px'; m.style.top=(drag.top+(ev.clientY-drag.sy))+'px'; m.style.transform='translate(0,0)'; }
    function up(){ document.removeEventListener('mousemove',mv); document.removeEventListener('mouseup',up); }
    document.addEventListener('mousemove',mv); document.addEventListener('mouseup',up);
  });
}
window.App = window.App || {}; window.App.Events = { ...(window.App.Events||{}), openLsModal: open, closeLsModal: close };
